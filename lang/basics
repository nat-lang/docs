use ../../tex

class GuideDoc extends TexDocument {
  init(content) => {
    super.init();
    this.preamble = tex"
      \documentclass[
        border={0pt 0px 0px 0px},
        varwidth=400px
      ]{standalone}
      \usepackage{stmaryrd}
      \usepackage{amsmath}
      \usepackage{tikz}
      \usepackage[linguistics]{forest}
      \usepackage{MnSymbol}
      \usepackage{gb4e}

      \usepackage[colorlinks]{hyperref}
      \usepackage{cleveref}
    ";

    this.add(content);
  }
}

let output = [];

let prefix typeset = output.push . GuideDoc;
let prefix codeblock = output.push . Codeblock;

let main = () => Generator(output, serialize);

typeset tex"
  \textbf{Basics}
  \hfill \\
  \hfill \\
  Nat is a simple language, consisting of functions and the objects
  that functions act on. Certain primitive objects are
  always available: numbers, truth values, and strings. Alongside these
  objects are basic functions for doing math, boolean logic, and string manipulation.
  \hfill \\
  \hfill \\
  You can, for instance, do arithmetic.
";

codeblock "print 1 + 1;";

typeset "You can also do boolean logic.";

codeblock "print true and false;";

typeset "As well as string concatenation, indexing, and substitution.";

codeblock "print #{quote("despair")} + #{quote(" ")} + #{quote("young")};
print #{quote("aged")}[2];
print #{quote("aged")}[2] = #{quote("i")};";

typeset "You can store values in variables.";

codeblock "let x = 1;
let y = 1;

print x + y;";

typeset tex"In fact, both $+$ and $print$ are variables that point to functions
defined by the compiler.";

codeblock "print +;
print print;";